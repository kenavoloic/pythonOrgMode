#+STARTUP: content
#+TITLE: Webscaping bookstoscrape.com

* Cr√©ation fichier
#+begin_src python
from outils import log, cheminFichier, cheminWebscrap
from scraping import bookScrap, pageScrap

from bs4 import BeautifulSoup
import itertools
import pandas as pd
import requests

nombrePage = 20
liens = [f'https://books.toscrape.com/catalogue/page-{x}.html'for x in range(1,nombrePage)]

listeArticles = [pageScrap(x) for x in liens]
listes = list(itertools.chain.from_iterable(listeArticles))

bouquins = [bookScrap(x) for x in listes]
df = pd.DataFrame(bouquins, columns=['Title','Rating','Price'])
nom = f'bookstoscrape-{nombrePage}-pages_raw.csv'
fichier = cheminWebscrap(nom)
df.to_csv(fichier, index=False)
#+end_src

* Exploitation
#+begin_src python
from outils import cheminFichier, cheminWebscrap

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

_ = print

pd.set_option('display.max_rows',200)

nom = 'bookstoscrape-20-pages_raw.csv'
fichier = cheminWebscrap(nom)
df = pd.read_csv(fichier)

sns.histplot(df['Price'], color='green', bins=15)
plt.grid(True)
plt.title('Price')
plt.show()

sns.histplot(df['Rating'], color='blue', bins=5)
plt.grid(True)
plt.title('Rating')
plt.show()

sns.histplot(x=df['Price'], hue=df['Rating'], color='blue', bins=15)
plt.tight_layout()
plt.show()
#_(df.describe())
#_(df.dtypes)


#+end_src

